export
fn main(reg u32 x, reg u32 y) -> reg u32 {
    reg u32 res;
    res = 0;

    res = 1 if (x == y);
    res = 1 if (x != y);
    res = 1 if (x <u y);
    res = 1 if (x <s y);
    res = 1 if (x <=u y);
    res = 1 if (x <=s y);
    res = 1 if (x >u y);
    res = 1 if (x >s y);
    res = 1 if (x >=u y);
    res = 1 if (x >=s y);

    if (x == y) { res = 1; }
    if (x != y) { res = 1; }
    if (x <u y) { res = 1; }
    if (x <s y) { res = 1; }
    if (x <=u y) { res = 1; }
    if (x <=s y) { res = 1; }
    if (x >u y) { res = 1; }
    if (x >s y) { res = 1; }
    if (x >=u y) { res = 1; }
    if (x >=s y) { res = 1; }

    while (x == y) { res = 1; }
    while (x != y) { res = 1; }
    while (x <u y) { res = 1; }
    while (x <s y) { res = 1; }
    while (x <=u y) { res = 1; }
    while (x <=s y) { res = 1; }
    while (x >u y) { res = 1; }
    while (x >s y) { res = 1; }
    while (x >=u y) { res = 1; }
    while (x >=s y) { res = 1; }

    res = res;
    return res;
}
