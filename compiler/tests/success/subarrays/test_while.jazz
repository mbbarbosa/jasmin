fn sum2 (reg ptr u64[2] r) -> reg u64 {
  reg u64 res;
  res = r[0];
  res += r[1];
  return res;
}

export fn f () -> reg u64 {
  reg u64 res tmp;
  stack u64[10] s;
  inline int i;
  reg u64 j;

  for i = 0 to 10 {
    s[i] = i+1;
  }
  j = 0;
  while (j <= 8) {
    tmp = sum2(s[(int)j:2]);
    res += tmp;
    j+=2;
  }

  return res;
}
