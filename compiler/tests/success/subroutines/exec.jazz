#returnaddress=stack
fn add(reg u64 x, reg u64 z) -> reg u64 { 
  reg u64 y;
  stack u64[2] t;
  y = z;
  t[0] = x;
  t[1] = y;
  x += t[0];
  y += t[1];
  x += y;
  return x;
}

export fn main() -> reg u64 {

  reg u64 x y;
  stack u64 s;
  x = 3;
  y = 7;
  s = 1;
  x = add(x, y);
  x += s;
  x = add(x, y);
  x += s;
  x = add(x, y);
  x += s;
  return x;
}